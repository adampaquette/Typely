// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sample.Infrastructure;

#nullable disable

namespace Sample.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240924122024_InitialData")]
    partial class InitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Sample.Domain.ContactAggregate.Contact", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PhoneType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            LastName = "Doe",
                            Phone = "123-456-7890",
                            PhoneType = 1
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jane",
                            LastName = "Smith",
                            Phone = "987-654-3210",
                            PhoneType = 3
                        });
                });

            modelBuilder.Entity("Sample.Domain.ContactAggregate.Contact", b =>
                {
                    b.OwnsMany("Sample.Domain.ContactAggregate.Address", "Addresses", b1 =>
                        {
                            b1.Property<int>("ContactId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Id")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("TEXT");

                            b1.Property<int>("CivicNumber")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("TEXT");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("TEXT");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("ContactId", "Id");

                            b1.ToTable("Address");

                            b1.WithOwner()
                                .HasForeignKey("ContactId");

                            b1.HasData(
                                new
                                {
                                    ContactId = 1,
                                    Id = 2,
                                    City = "Other City",
                                    CivicNumber = 456,
                                    State = "NY",
                                    Street = "Oak Ave",
                                    ZipCode = "67890"
                                },
                                new
                                {
                                    ContactId = 2,
                                    Id = 1,
                                    City = "Anytown",
                                    CivicNumber = 123,
                                    State = "CA",
                                    Street = "Main St",
                                    ZipCode = "12345"
                                });
                        });

                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
